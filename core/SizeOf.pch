#pragma once
#include "Types.pch"

template<typename T>
T DecimalsOf(T& numberToCountDigits)
{
    if(numberToCountDigits < 10) return 1;
    
    if(numberToCountDigits < 100) return 2;
    
    if(numberToCountDigits < 1000) return 3;
    
    if(numberToCountDigits < 10000) return 4;
    
    if(numberToCountDigits < 100000) return 5;
    
    if(numberToCountDigits < 1000000) return 6;
    
    if(numberToCountDigits > 1000000) return DecimalsOf<T>(numberToCountDigits /= 1000000) + 6;
    
    return 0;
};

template<typename T>
T DecimalsOf(T&& numberToCountDigits)
{
    if(numberToCountDigits < 10) return 1;
    
    if(numberToCountDigits < 100) return 2;
    
    if(numberToCountDigits < 1000) return 3;
    
    if(numberToCountDigits < 10000) return 4;
    
    if(numberToCountDigits < 100000) return 5;
    
    if(numberToCountDigits < 1000000) return 6;
    
    if(numberToCountDigits > 1000000) return DecimalsOf<T>(numberToCountDigits /= 1000000) + 6;
    
    return 0;
};
